{
  
    
        "post0": {
            "title": "Projects that shouldn't exist: agendas.cvilledata.org",
            "content": "On April 18, the Charlottesville City Council approved a housing development at 240 Stribling Avenue. The project has been on the city agenda since 2019, and the Daily Progress has covered the topic extensively—although so far I haven&#39;t found any coverage there of the final vote approving the rezoning. But it&#39;s not easy to find a history of the project as it&#39;s wound through city government. . Try searching the city website: as of this writing, no results. A Google site search turns up a few hits, but none related to the rezoning. A site search of the content management system that the city uses for public meetings returns three results, covering two Planning Commission meetings. But there were more than two city meetings about this project! Finally, the city meetings website has a basic search feature that actually yields some useful results—but without previews, it&#39;s hard to tell which documents are relevant. And this search tool only exists within the CMS, so it can&#39;t be discovered by Google: . . I wanted a collection of city meetings that would be easy to search without proprietary tools, so I wrote a program to collect all the documents from the city meetings website, convert PDF files to text, and search documents by content. The result is https://agendas.cvilledata.org, and if you use the search bar at the top of the page to look for &quot;240 stribling&quot;, you&#39;ll find multiple City Council and Planning Commission meetings, as well as the original Planning Commission work session at which the idea for the development was first discussed. Or if you don&#39;t want to be subjected to my limited web design skills, the content is also indexed by Google, so a site search works as usual. . Ideally this project wouldn&#39;t exist, and the city website would be easy to search. Failing that, the city could provide documents for public meetings on a public FTP server for easy access. But City Hall is short-staffed, so for now I&#39;ll use my own project to search meeting documents. Hopefully I can retire the code I wrote someday, because it&#39;s sort of a mess. In particular, it uses Selenium to crawl the city&#39;s meeting portal, since I couldn&#39;t figure out how to paginate the meetings table without executing javascript. One silver lining is that it&#39;s fun to watch the program navigate the city website automatically, so I&#39;ll end this writeup with a video: . .",
            "url": "https://blog.cvilledata.org/transparency/2022/05/09/city-agendas.html",
            "relUrl": "/transparency/2022/05/09/city-agendas.html",
            "date": " • May 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Assessing Charlottesville property assessments",
            "content": "Residential property assessments in Charlottesville rose by 11.7% in 2022, and local officials and residents are concerned. Is this an unusual change in assessments? Which properties saw the greatest increases, and why? . We can find the relevant data at the city&#39;s Open Data Portal. For simplicity, I&#39;m going to treat parcels as residential if they have an entry in the residential details table. I&#39;m also going to look up at to 20 years of data, so I&#39;m only including homes built after 2002. . # Hack: Ignore shapely/geos version mismatch warning import warnings warnings.simplefilter(&quot;ignore&quot;) import altair as alt import branca import folium import numpy as np import seaborn as sns import statsmodels.formula.api as smf from google.cloud import bigquery bq = bigquery.Client() . . First we can look at average assessments over time: . raw_assessments_by_year = bq.query( &quot;&quot;&quot; select assessments.taxyear, avg(assessments.totalvalue) as totalvalue, count(assessments.totalvalue) as count, from `cvilledata.cville_open_data.real_estate_all_assessments` assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumb = residential.parcelnumb where assessments.taxyear &gt;= 2002 and residential.yearbuilt &lt;= 2002 group by assessments.taxyear order by assessments.taxyear desc &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(raw_assessments_by_year).mark_bar().encode( y=alt.Y(&quot;totalvalue:Q&quot;), x=alt.X(&quot;taxyear:N&quot;, sort=&quot;x&quot;), tooltip=&quot;totalvalue:Q&quot;, ).properties( title=&quot;Mean assessment by year&quot;, ) . . Assessments have grown substantially over the past 20 years, almost tripling since 2002. But this doesn&#39;t tell us whether the change in values in 2022 was typical or not. Let&#39;s look at proportion change in assessments relative to the previous year over the past 20 years: . assessments_by_year = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ) select assessments.taxyear, avg(assessments.totalvalue) as totalvalue, avg(assessments.totalvaluechange) as totalvaluechange, count(assessments.totalvalue) as count, from assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb where assessments.taxyear &gt;= 2002 and residential.yearbuilt &lt; 2002 group by assessments.taxyear order by assessments.taxyear desc &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(assessments_by_year).mark_bar().encode( y=alt.Y(&quot;totalvaluechange:Q&quot;), x=alt.X(&quot;taxyear:N&quot;, sort=&quot;x&quot;), tooltip=&quot;totalvaluechange:Q&quot;, ).properties( title=&quot;Mean assessment proportion change by year&quot;, ) . . Property values rose about 12.4% in 2022 relative to 2021. That&#39;s a large increase relative to the past decade, but assessments rose faster every year from 2003 to 2007. Assessments also rose relatively slowly in 2020 and 2021; we&#39;ll say more about this later. . Next, we can map changes in assessments by parcel across the city: . assessments_by_parcel = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ), sales as ( select *, count(*) over (partition by bookpage) as parcelcount, from `cvilledata.cville_open_data.real_estate_sales` ) select assessments.parcelnumber, assessments.taxyear, assessments.totalvalue, assessments.totalvaluechange, concat(details.streetnumb, &#39; &#39;, details.streetname) as address, neighborhoods.name as neighborhoodname, sales.saleamount is not null as soldprevyear, st_geogfromgeojson(details.geometry) as geometry, from assessments join `cvilledata.cville_open_data.parcel_area_details` details on assessments.parcelnumber = details.parcelnumb join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin left join sales on assessments.parcelnumber = sales.parcelnumb and sales.saleamount &gt; 0 and sales.parcelcount = 1 and extract(year from sales.saledate) = assessments.taxyear - 1 where assessments.taxyear = 2022 and residential.yearbuilt &lt; 2002 &quot;&quot;&quot; ).result().to_geodataframe() parcel_colormap = branca.colormap.linear.YlOrRd_09 parcel_color_values = assessments_by_parcel[&quot;totalvaluechange&quot;][~assessments_by_parcel[&quot;totalvaluechange&quot;].isna()] parcel_colormap = parcel_colormap.scale(*list(np.percentile(parcel_color_values, [5, 95]))) def style(feature): color_value = feature[&quot;properties&quot;][&quot;totalvaluechange&quot;] if color_value is None or np.isnan(color_value): fill_color = &quot;white&quot; else: fill_color = parcel_colormap.rgb_hex_str(color_value) return { &quot;color&quot;: &quot;black&quot;, &quot;weight&quot;: 0.05, &quot;fillOpacity&quot;: 0.8, &quot;fillColor&quot;: fill_color, } parcel_map = folium.Map( location=[38.04, -78.49], tiles=&quot;cartodbpositron&quot;, zoom_start=13.5, zoom_delta=0.5, ) folium.GeoJson( assessments_by_parcel, tooltip=folium.GeoJsonTooltip(fields=[&quot;parcelnumber&quot;, &quot;address&quot;, &quot;totalvalue&quot;, &quot;totalvaluechange&quot;, &quot;neighborhoodname&quot;, &quot;soldprevyear&quot;], labels=True), style_function=style, ).add_to(parcel_map) parcel_colormap.add_to(parcel_map) parcel_map . . Make this Notebook Trusted to load map: File -&gt; Trust Notebook One striking observation from this map is that assessment changes seem consistent within neighborhoods. For example, assessment increases were generally low in North Downtown, moderate in Greenbrier and Locust Grove, and high in Orangedale. . The City Assessor groups parcels by planning neighborhood. To simplify, we can map assessment changes after aggregating by neighborhood: . assessments_by_neighborhood = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ), sales as ( select *, count(*) over (partition by bookpage) as parcelcount, from `cvilledata.cville_open_data.real_estate_sales` ) select avg(assessments.totalvaluechange) as totalvaluechange, neighborhoods.neighhood as neighborhoodname, st_union_agg(st_geogfromgeojson(neighborhoods.geometry)) as geometry, from assessments join `cvilledata.cville_open_data.parcel_area_details` details on assessments.parcelnumber = details.parcelnumb join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` gpintoneighborhoods on assessments.gpin = gpintoneighborhoods.gpin join `cvilledata.cville_open_data.assessment_neighborhoods` neighborhoods on gpintoneighborhoods.name = neighborhoods.neighhood left join sales on assessments.parcelnumber = sales.parcelnumb and sales.saleamount &gt; 0 and sales.parcelcount = 1 and extract(year from sales.saledate) = assessments.taxyear - 1 where assessments.taxyear = 2022 and residential.yearbuilt &lt; 2002 group by neighborhoodname &quot;&quot;&quot; ).result().to_geodataframe() nhood_colormap = branca.colormap.linear.YlOrRd_09 nhood_color_values = assessments_by_neighborhood[&quot;totalvaluechange&quot;][~assessments_by_neighborhood[&quot;totalvaluechange&quot;].isna()] nhood_colormap = nhood_colormap.scale(*list(np.percentile(nhood_color_values, [5, 95]))) def style(feature): color_value = feature[&quot;properties&quot;][&quot;totalvaluechange&quot;] if color_value is None or np.isnan(color_value): fill_color = &quot;white&quot; else: fill_color = nhood_colormap.rgb_hex_str(color_value) return { &quot;color&quot;: &quot;black&quot;, &quot;weight&quot;: 0.05, &quot;fillOpacity&quot;: 0.8, &quot;fillColor&quot;: fill_color, } nhood_map = folium.Map( location=[38.04, -78.49], tiles=&quot;cartodbpositron&quot;, zoom_start=13.5, zoom_delta=0.5, ) folium.GeoJson( assessments_by_neighborhood, tooltip=folium.GeoJsonTooltip(fields=[&quot;totalvaluechange&quot;, &quot;neighborhoodname&quot;], labels=True), style_function=style, ).add_to(nhood_map) nhood_colormap.add_to(nhood_map) nhood_map . . Make this Notebook Trusted to load map: File -&gt; Trust Notebook Here are the same values ranked by neighborhood, from greatest to least proportion change: . assessments_by_neighborhood_2022 = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ) select neighborhoods.name as neighborhoodname, avg(assessments.totalvalue) as totalvalue, avg(assessments.totalvaluechange) as totalvaluechange, count(1) as count, from assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin where assessments.taxyear = 2022 and residential.yearbuilt &lt; 2002 group by neighborhoodname order by neighborhoodname &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(assessments_by_neighborhood_2022[assessments_by_neighborhood_2022[&quot;count&quot;] &gt;= 15]).mark_bar().encode( x=alt.X(&quot;totalvaluechange:Q&quot;), y=alt.Y(&quot;neighborhoodname:N&quot;, sort=&quot;-x&quot;), color=alt.Color(&quot;neighborhoodname:N&quot;, legend=None), tooltip=&quot;totalvaluechange:Q&quot;, ).properties( title=&quot;Mean assessment proportion change by neighborhood, tax year 2022&quot;, ) . . Property assessments in the Orangedale neighborhood rose by 24.7%, about double the rate of the city overall. Why? One partial explanation may be that the Orangedale neighborhood saw near-zero changes in assessments in 2021, 2018, and 2016. This doesn&#39;t seem to be the case for the adjacent Forest Hills neighborhood, although the Birdwood neighborhood also appears to have skipped assessments in 2021. . assessments_by_neighborhood_by_year = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ) select neighborhoods.name as neighborhoodname, assessments.taxyear, avg(assessments.totalvalue) as totalvalue, avg(assessments.totalvaluechange) as totalvaluechange, count(1) as count, from assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin where assessments.taxyear &gt;= 2002 and residential.yearbuilt &lt; 2002 group by neighborhoodname, taxyear order by neighborhoodname &quot;&quot;&quot; ).result().to_dataframe() neighborhoods = [ &quot;Birdwood/Hillcrest Road&quot;, &quot;Forest Hills&quot;, &quot;Orangedale&quot;, ] assessments_by_neighborhood_by_year_filtered = assessments_by_neighborhood_by_year[ (assessments_by_neighborhood_by_year.neighborhoodname.isin(neighborhoods)) &amp; (assessments_by_neighborhood_by_year.taxyear &gt;= 2012) ] alt.Chart(assessments_by_neighborhood_by_year_filtered).mark_bar().encode( y=alt.Y(&quot;totalvaluechange:Q&quot;), x=alt.X(&quot;taxyear:N&quot;, sort=&quot;x&quot;), color=alt.Color(&quot;neighborhoodname:N&quot;, legend=None), column=&quot;neighborhoodname:N&quot;, tooltip=&quot;totalvaluechange:Q&quot;, ).properties( title=&quot;Mean assessment proportion change by neighborhood by year, selected neighborhoods&quot;, ) . . Here&#39;s a detailed view of a single parcel in the Orangedale neighborhood. Its assessment stayed constant from 2020 to 2021, from 2017 to 2018, and from 2011 to 2016. Did the true value of that parcel remain unchanged for those years, or is this an artifact of the assessor&#39;s methodology? . assessments_by_year_example = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ) select * from assessments where assessments.taxyear &gt;= 2002 and assessments.parcelnumber = &#39;240159000&#39; &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(assessments_by_year_example).mark_bar().encode( y=alt.Y(&quot;totalvalue:Q&quot;), x=alt.X(&quot;taxyear:N&quot;, sort=&quot;x&quot;), tooltip=&quot;totalvalue:Q&quot;, ).properties( title=&quot;Assessment value for an example parcel, Orangedale neighborhood&quot;, ) . . Another interesting trend from the maps above is that, while changes in assessment were mostly consistent within neighborhoods, many neighborhoods included a handful of properties with unusually high assessment increases. Hover over those parcels and you&#39;ll see that many share one factor in common: they were sold in 2021. Let&#39;s compare changes in assessed value for all homes sold in the previous year compared to homes that didn&#39;t sell over time: . assessments_by_prev_sale = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ), sales as ( select *, count(*) over (partition by bookpage) as parcelcount, from `cvilledata.cville_open_data.real_estate_sales` ) select assessments.taxyear, sales.saleamount is not null as soldprevyear, avg(assessments.totalvaluechange) as totalvaluechange, count(1) as count, from assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin left join sales on assessments.parcelnumber = sales.parcelnumb and sales.saleamount &gt; 0 and sales.parcelcount = 1 and extract(year from sales.saledate) = assessments.taxyear - 1 where assessments.taxyear &gt; 2012 and residential.yearbuilt &lt; 2002 group by assessments.taxyear, soldprevyear order by assessments.taxyear desc &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(assessments_by_prev_sale).mark_bar().encode( y=alt.Y(&quot;totalvaluechange:Q&quot;), x=alt.X(&quot;soldprevyear:N&quot;, sort=&quot;-x&quot;, axis=None), color=alt.Color(&quot;soldprevyear:N&quot;), column=alt.Column(&quot;taxyear:N&quot;, sort=&quot;ascending&quot;), tooltip=&quot;totalvaluechange:Q&quot;, ).properties( title=&quot;Mean assessment proportion change by previous sale by year&quot;, ).configure_view( stroke=&quot;transparent&quot;, ) . . For each of the past ten years, parcels that had sold in the previous year saw greater increases in assessments than properties that didn&#39;t sell. We can dig in further and compare properties that sold for more than their previous assessment versus properties that sold at or under assessment: . assessments_by_sale_category = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ), sales as ( select *, count(*) over (partition by bookpage) as parcelcount, from `cvilledata.cville_open_data.real_estate_sales` ) select assessments.taxyear, case when sales.saleamount is not null and sales.saleamount &gt; assessments.totalvalueprev then &#39;soldoverassessment&#39; when sales.saleamount is not null then &#39;soldatorunderassessment&#39; else &#39;notsold&#39; end as salecategory, avg(assessments.totalvaluechange) as totalvaluechange, count(1) as count, from assessments join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin left join sales on assessments.parcelnumber = sales.parcelnumb and sales.saleamount &gt; 0 and sales.parcelcount = 1 and extract(year from sales.saledate) = assessments.taxyear - 1 where assessments.taxyear &gt; 2012 and residential.yearbuilt &lt; 2002 group by assessments.taxyear, salecategory order by assessments.taxyear desc &quot;&quot;&quot; ).result().to_dataframe() alt.Chart(assessments_by_sale_category).mark_bar().encode( y=alt.Y(&quot;totalvaluechange:Q&quot;), x=alt.X(&quot;salecategory:N&quot;, sort=&quot;-x&quot;, axis=None), color=alt.Color(&quot;salecategory:N&quot;), column=alt.Column(&quot;taxyear:N&quot;, sort=&quot;ascending&quot;), tooltip=&quot;totalvaluechange:Q&quot;, ).properties( title=&quot;Mean assessment proportion change by previous sale category by year&quot;, ).configure_view( stroke=&quot;transparent&quot;, ) . . It turns out that assessment increases for recently-sold properties are mostly driven by properties that sold over assessment. These properties saw average assessment increases of over 20% in 2020, 2021, and 2022. Meanwhile, parcels that sold under assessment generally saw increased assessments, but their assessments grew less than properties that didn&#39;t sell at all. . Next, we can look at assessment changes as a function of previous-year sale prices. Do homes that sold for more relative to previous assessments also see higher assessment changes the following year? . assessments_by_sale_category_by_parcel = bq.query( &quot;&quot;&quot; with assessments as ( select details.parcelnumb as parcelnumber, details.geoparceli as gpin, assessments.taxyear, assessments.totalvalue, lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) as totalvalueprev, safe_divide( assessments.totalvalue - lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear), lag(assessments.totalvalue, 1) over (partition by details.parcelnumb order by assessments.taxyear) ) as totalvaluechange, from `cvilledata.cville_open_data.parcel_area_details` details join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on details.parcelnumb = assessments.parcelnumb ), sales as ( select *, count(*) over (partition by bookpage) as parcelcount, from `cvilledata.cville_open_data.real_estate_sales` ) select assessments.parcelnumber, neighborhoods.name as neighborhoodname, concat(details.streetnumb, &#39; &#39;, details.streetname) as address, assessments.totalvaluechange as totalvaluechange, safe_divide(sales.saleamount - assessments.totalvalueprev, assessments.totalvalueprev) as overassessmentchange, from assessments join `cvilledata.cville_open_data.parcel_area_details` details on assessments.parcelnumber = details.parcelnumb join `cvilledata.cville_open_data.real_estate_residential_details` residential on assessments.parcelnumber = residential.parcelnumb join `cvilledata.cville_open_data_derived.geopin_to_assessment_neighborhood` neighborhoods on assessments.gpin = neighborhoods.gpin left join sales on assessments.parcelnumber = sales.parcelnumb and sales.saleamount &gt; 0 and sales.parcelcount = 1 and extract(year from sales.saledate) = assessments.taxyear - 1 where assessments.taxyear = 2022 and residential.yearbuilt &lt; 2002 and sales.saleamount is not null &quot;&quot;&quot; ).result().to_dataframe() sns.lmplot( data=assessments_by_sale_category_by_parcel, x=&quot;overassessmentchange&quot;, y=&quot;totalvaluechange&quot;, ).set( title=&quot;Assessment changes by sale prices relative to previous assessments&quot;, ) . . &lt;seaborn.axisgrid.FacetGrid at 0x12922f730&gt; . Unsurprisingly, houses that sold relatively high over their previous assessment also saw relatively large increases in assessed value the following year. However, the slope of the best-fit line is about 0.57, meaning that a parcel that sold for 10% more than its previous assessment saw its assessed value rise by about 0.057%. In other words, even though new homeowners are likely to experience relatively large increases in home assessments, those assessments may still fall short of the price they actually paid. . model = smf.ols(formula=&quot;totalvaluechange ~ overassessmentchange&quot;, data=assessments_by_sale_category_by_parcel) res = model.fit() res.summary() . . OLS Regression Results Dep. Variable: totalvaluechange | R-squared: 0.586 | . Model: OLS | Adj. R-squared: 0.585 | . Method: Least Squares | F-statistic: 870.2 | . Date: Tue, 19 Apr 2022 | Prob (F-statistic): 7.50e-120 | . Time: 01:20:36 | Log-Likelihood: 411.06 | . No. Observations: 617 | AIC: -818.1 | . Df Residuals: 615 | BIC: -809.3 | . Df Model: 1 | | . Covariance Type: nonrobust | | . | coef std err t P&gt;|t| [0.025 0.975] . Intercept 0.0780 | 0.006 | 12.649 | 0.000 | 0.066 | 0.090 | . overassessmentchange 0.5703 | 0.019 | 29.500 | 0.000 | 0.532 | 0.608 | . Omnibus: 301.351 | Durbin-Watson: 1.660 | . Prob(Omnibus): 0.000 | Jarque-Bera (JB): 3352.080 | . Skew: 1.885 | Prob(JB): 0.00 | . Kurtosis: 13.779 | Cond. No. 4.00 | . Notes:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified. Our simple model explains future assessment changes fairly well, accounting for about 59% of the variance in assessment changes for parcels that sold the previous year. However, there are some outliers from the best fit line; we can draw an interactive plot (hover over points for details) and color points by neighborhood to look for an explanation, although nothing jumps out at me: . alt.Chart(assessments_by_sale_category_by_parcel).mark_circle(size=60).encode( y=alt.Y(&quot;totalvaluechange:Q&quot;), x=alt.X(&quot;overassessmentchange:Q&quot;), color=alt.Color(&quot;neighborhoodname:N&quot;), tooltip=[&quot;address:N&quot;, &quot;overassessmentchange:Q&quot;, &quot;totalvaluechange:Q&quot;], ).properties( title=&quot;Assessment changes by sale prices relative to previous assessments&quot;, ).interactive() . . Well, this was fun! My main takeaway is something like &quot;assessments are confusing&quot;, but here are a few more specific observations: . The increase in assessments in 2022 is high relative to the past few years, but we aren&#39;t replaying 2007 yet. | Changes in assessments are mostly consistent within neighborhoods. For most neighborhoods, the assessor seems to adjust assessments on most properties by roughly the same proportion. Except... | Properties that sold during the previous year, and especially properties that sold for more than their previous assessments, increased in value much more than nearby properties. | Some parcels had identical values across two or more years, and sometimes values remained the same for most of a neighborhood. | . Did I miss anything? Find a mistake in a query? Let me know @whatthecarp. .",
            "url": "https://blog.cvilledata.org/land-use/2022/04/21/cville-assessments.html",
            "relUrl": "/land-use/2022/04/21/cville-assessments.html",
            "date": " • Apr 21, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Who owns Charlottesville?",
            "content": "Every afternoon, @everysalecville posts details of the real estate transactions of the past day. Often, the buyer is a Limited Liability Company, or LLC; recent buyers include &quot;YELLOW SHIRT LLC&quot;, &quot;DADDY RABBIT, INC&quot;, and &quot;ASPIRING DEVELOPMENTS, LLC&quot;. Which of these companies own the most land in Charlottesville, and who owns the companies? . We can look up real estate tranactions from the city Open Data Portal and identify the top property owners by owner name or address. In some cases, multiple owner names share the same owner address—often a business address or Post Office box—so we group properties by owner address. For example, 148 properties list their owner address as &quot;224 14TH ST NW&quot;, with owner names like &quot;400 PRESTON AVENUE LLC&quot;, &quot;DOGWOOD PROPERTIES OF C&#39;VILLE LLC&quot;, and &quot;WP MONTEBELLO, LLC&quot;. These owning entities all seem to be associated with Woodard Properties, so we label them as part of this entity. . Note: I&#39;m excluding tax-exempt parcels from this post, which is why we don&#39;t see much property owned by the city or UVA here. . import datetime # Hack: Ignore shapely/geos version mismatch warning import warnings warnings.simplefilter(&quot;ignore&quot;) import branca import folium import palettable import pandas as pd from google.cloud import bigquery bq = bigquery.Client() pd.set_option(&quot;display.max_colwidth&quot;, None) . . # Fetch data from BigQuery holdings = bq.query( &quot;&quot;&quot; with parcels as ( select parcelnumb as parcelnumber, assessment, ownername, case when owneraddre = &#39;MSC BOX 5186&#39; then &#39;P O BOX 5306&#39; when owneraddre = &#39;3056 BERKMAR DRIVE&#39; then &#39;3056 BERKMAR DR&#39; else owneraddre end as owneraddress, st_geogfromgeojson(geometry) as geometry, from `cvilledata.cville_open_data.parcel_area_details` where owneraddre is not null and filetype not in (&#39;E&#39;) ) select owneraddress, array_agg(distinct ownername ignore nulls order by ownername) as ownernames, sum(assessment) as assessment, st_area(st_union_agg(geometry)) as area, count(*) as count, from parcels group by owneraddress order by count desc &quot;&quot;&quot; ).result().to_dataframe() parcels = bq.query( &quot;&quot;&quot; with parcels as ( select parcelnumb as parcelnumber, streetnumb as streetnumber, streetname, concat(coalesce(streetnumb, &#39;?&#39;), &#39; &#39;, streetname) as address, assessment, ownername, case when owneraddre = &#39;MSC BOX 5186&#39; then &#39;P O BOX 5306&#39; when owneraddre = &#39;3056 BERKMAR DRIVE&#39; then &#39;3056 BERKMAR DR&#39; else owneraddre end as owneraddress, st_geogfromgeojson(geometry) as geometry, from `cvilledata.cville_open_data.parcel_area_details` where owneraddre is not null and filetype not in (&#39;E&#39;) ), lastsold as ( select parcelnumb as parcelnumber, max(saledate) as saledate, from `cvilledata.cville_open_data.real_estate_sales` where saleamount &gt; 0 group by parcelnumb ) select parcels.*, lastsold.saledate as lastsold, from parcels left join lastsold on parcels.parcelnumber = lastsold.parcelnumber where owneraddress in unnest(@owneraddresses) &quot;&quot;&quot;, job_config=bigquery.QueryJobConfig( query_parameters=[bigquery.ArrayQueryParameter(&quot;owneraddresses&quot;, &quot;STRING&quot;, holdings[:10].owneraddress.tolist())] ), ).result().to_geodataframe() . . # Map owner addresses to business entities ADDRESS_TO_ENTITY_NAME = { &quot;810 CATALPA CT&quot;: &quot;Neighborhood Investments&quot;, &quot;224 14TH ST NW&quot;: &quot;Woodard Properties&quot;, &quot;PO BOX 911&quot;: &quot;City of Charlottesville&quot;, &quot;360 ARDWOOD RD&quot;: &quot;Silk Purse Properties&quot;, &quot;P O BOX 400884&quot;: &quot;Rector &amp; Visitors of UVA&quot;, &quot;977 SEMINOLE TR STE 329&quot;: &quot;Evening Properties&quot;, &quot;PO BOX 1405&quot;: &quot;CRHA&quot;, &quot;P O BOX 1414&quot;: &quot;CBS Rentals&quot;, &quot;P O BOX 5306&quot;: &quot;MSC UVA&quot;, &quot;P O BOX 1467&quot;: &quot;Riverbend Development&quot;, &quot;1134 E HIGH ST&quot;: &quot;Alcova Properties&quot;, &quot;1500 AMHERST ST #3&quot;: &quot;Real Property Management&quot;, &quot;142 S PANTOPS DR&quot;: &quot;Southern Development Homes&quot;, &quot;3056 BERKMAR DR&quot;: &quot;Wade Rentals&quot;, &quot;1001 E MARKET ST STE 102&quot;: &quot;Community Services Housing&quot;, &quot;400 LOCUST AVE STE 3&quot;: &quot;BMC Holdings Group&quot;, &quot;300 2ND ST NE&quot;: &quot;Milestone Partners&quot;, &quot;2000 BENTIVAR DR&quot;: &quot;Binx Properties&quot;, &quot;2088 UNION ST STE 1&quot;: &quot;Allan Cadgene&quot;, &quot;P O BOX 5526&quot;: &quot;Great Eastern Management Company&quot;, &quot;201 15TH ST NW STE 1A&quot;: &quot;Veliky Rentals&quot;, &quot;P O BOX 400218&quot;: &quot;University of Virginia Foundation&quot;, &quot;P O BOX 7136&quot;: &quot;INV Group&quot;, &quot;P O BOX 9035&quot;: &quot;Pepsi-Cola Central Virginia&quot;, } holdings[&quot;ownerentity&quot;] = holdings.owneraddress.apply(lambda owneraddress: ADDRESS_TO_ENTITY_NAME.get(owneraddress, owneraddress)) parcels[&quot;ownerentity&quot;] = parcels.owneraddress.apply(lambda owneraddress: ADDRESS_TO_ENTITY_NAME.get(owneraddress, owneraddress)) # Stringify dates for compatibility with folium parcels[&quot;lastsold&quot;] = parcels.lastsold.apply(lambda date: datetime.datetime.strftime(date, &quot;%Y-%m-%d&quot;) if date else &quot;&quot;) . . Here&#39;s the complete list of owner names associated with Woodard Properties via its business address: . holdings.ownernames[:1].tolist() . . [array([&#39;400 PRESTON AVENUE LLC&#39;, &#39;C-VILLE BUSINESS PARK LLC&#39;, &#39;C-VILLE BUSINESS PARK, LLC&#39;, &#39;CAMDEN PLAZA, LLC&#39;, &#39;CHARLOTTESVILLE FIRST STREET APTS LLC&#39;, &#39;COMYN GROUNDS, LLC&#39;, &#34;DOGWOOD PROPERTIES OF C&#39;VILLE LLC&#34;, &#34;DOGWOOD PROPERTIES OF C&#39;VILLE, LLC&#34;, &#39;EAST MARKET LLC&#39;, &#39;FIRST AND MAIN CHARLOTTESVILLE, LLC&#39;, &#39;GOODMAN STREET PROPERTIES LLC&#39;, &#39;GRADUATE APARTMENTS, LLC&#39;, &#39;GRADUATE COURT I LLC&#39;, &#39;GRADUATE PLACE LLC&#39;, &#39;GRADY APARTMENTS LLC&#39;, &#39;KOW DEVELOPMENT LLC&#39;, &#39;MARKET PLAZA LLC&#39;, &#39;MARKET SQUARE LLC&#39;, &#34;MOORE&#39;S CREEK LLC&#34;, &#39;PINK WAREHOUSE, LLC&#39;, &#39;RENAISSANCE PLACE LLC&#39;, &#39;THE CORNER PLACE LLC&#39;, &#39;WERTLAND TRIO LLC&#39;, &#39;WEST SOUTH STREET LLC&#39;, &#39;WOODARD UNITED LLC&#39;, &#39;WP CASC LLC&#39;, &#39;WP CHERRY LLC&#39;, &#39;WP FACILITIES LLC&#39;, &#39;WP FOREST STREET LLC&#39;, &#39;WP GROUP LLC&#39;, &#39;WP MONTEBELLO, LLC&#39;, &#39;WP PRESTON LLC&#39;, &#39;WP SOUTH STREET LLC&#39;, &#39;WP UNIVERSITY LLC&#39;], dtype=object)] . And here are the top 20 property owners in the city, ranked by number of parcels owned. Some business entities, like Silk Purse Properties or Evening Properties, use a single LLC to manage all their properties. Others use a range of LLCs, some named by property like &quot;114 CARROLLTON TERRACE, LLC&quot; and others with less revealing names like &quot;MISCELLANEOUS PROPERTIES, LLC&quot;. . Note: owner names and addresses are public records from the city open data portal, but owner entities are my best guesses at the person or corporate entity that owns the properties. I looked up owner entities by Googling owner and property addresses and cross-checking property holdings with corporate rental portals. I&#39;ve tried to be thorough but may have made mistakes, and I haven&#39;t been able to track down the owner of Wertland Commons, which appears to be registered at a residence. . It&#39;s also possible that grouping owners by address combines entities that should be treated as distinct. For example, Woodard Properties acquired Dogwood Housing years ago, so both entities share an address. But Woodard committed to continuing Dogwood&#39;s mission of providing affordable housing, so it might be reasonable to treat the two entities as separate. . holdings[[&quot;owneraddress&quot;, &quot;ownernames&quot;, &quot;ownerentity&quot;, &quot;count&quot;]][:20] . . owneraddress ownernames ownerentity count . 0 224 14TH ST NW | [400 PRESTON AVENUE LLC, C-VILLE BUSINESS PARK LLC, C-VILLE BUSINESS PARK, LLC, CAMDEN PLAZA, LLC, CHARLOTTESVILLE FIRST STREET APTS LLC, COMYN GROUNDS, LLC, DOGWOOD PROPERTIES OF C&#39;VILLE LLC, DOGWOOD PROPERTIES OF C&#39;VILLE, LLC, EAST MARKET LLC, FIRST AND MAIN CHARLOTTESVILLE, LLC, GOODMAN STREET PROPERTIES LLC, GRADUATE APARTMENTS, LLC, GRADUATE COURT I LLC, GRADUATE PLACE LLC, GRADY APARTMENTS LLC, KOW DEVELOPMENT LLC, MARKET PLAZA LLC, MARKET SQUARE LLC, MOORE&#39;S CREEK LLC, PINK WAREHOUSE, LLC, RENAISSANCE PLACE LLC, THE CORNER PLACE LLC, WERTLAND TRIO LLC, WEST SOUTH STREET LLC, WOODARD UNITED LLC, WP CASC LLC, WP CHERRY LLC, WP FACILITIES LLC, WP FOREST STREET LLC, WP GROUP LLC, WP MONTEBELLO, LLC, WP PRESTON LLC, WP SOUTH STREET LLC, WP UNIVERSITY LLC] | Woodard Properties | 148 | . 1 810 CATALPA CT | [NEIGHBORHOOD INVESTMENTS LLC, NEIGHBORHOOD INVESTMENTS, LLC, NEIGHBORHOOD INVESTMENTS--1725, LLC, NEIGHBORHOOD INVESTMENTS--1910, LLC, NEIGHBORHOOD INVESTMENTS--GRC, LLC, NEIGHBORHOOD INVESTMENTS--JS, LLC, NEIGHBORHOOD INVESTMENTS--LL, LLC, NEIGHBORHOOD INVESTMENTS--PC, LP, NEIGHBORHOOD INVESTMENTS-1910, LLC, NEIGHBORHOOD INVESTMENTS-324, LLC, NEIGHBORHOOD INVESTMENTS-CA, LLC, NEIGHBORHOOD INVESTMENTS-JJ, LLC, NEIGHBORHOOD INVESTMENTS-RC, LLC, NEIGHBORHOOD INVESTMENTS-RH, LLC, NEIGHBORHOOD INVESTMENTS-WS, LLC, SANDBOX, LLC, TARLETON SQUARE LAND, LLC] | Neighborhood Investments | 71 | . 2 3056 BERKMAR DR | [JOHNSON VILLAGE, LLC, MISCELLANEOUS PROPERTIES, LLC, WELK PLACE LLC, WELK PLACE, LLC] | Wade Rentals | 55 | . 3 360 ARDWOOD RD | [SILK PURSE PROPERTIES, LLC] | Silk Purse Properties | 55 | . 4 977 SEMINOLE TR STE 329 | [EVENING PROPERTIES, LC] | Evening Properties | 49 | . 5 P O BOX 1414 | [100 AVON LLC, BARON LLC, BARON, LLC, BETA BRIDGE LLC, BLUE COTTAGE LLC, BLUE COTTAGE, LLC, DINSMORE LLC, DINSMORE, L L C, DINSMORE, LLC, LITTLE HOUSE, LLC, MCKENNIE LLC, PIEDMONT HOSPITAL LLC, PIEDMONT HOSPITAL, LLC, STULTZ, LLC, THE GREENHOUSE APARTMENTS LLC, WERTLAND WAREHOUSE, LLC, WERTLAND, LLC] | CBS Rentals | 49 | . 6 1134 E HIGH ST | [PARK LANE PROPERTIES, LLC, RIVANNA, PARTNERSHIP, UNIVERSITY LIMITED PARTNERSHIP] | Alcova Properties | 47 | . 7 P O BOX 5306 | [111 HARMON, LLC, 114 CARROLLTON TERRACE, LLC, 1337 PRESTON, LLC, 1701 GORDON AVENUE, LLC, 600 RUGBY ROAD HOUSING CORPORATION, BROOKWOOD PROPERTY OWNERS ASSOCIATION, INC, BURNET COMMONS PROP OWNER ASSOC, BURNET COMMONS TWO PROPERTY OWNERS ASSOCIATION, INC, CABELL LIMITED PARTNERSHIP, CAMBRIDGE HOUSE APARTMENTS, LLC, CAMBRIDGE SQUARE APARTMENTS LP, CATON, DOUGLAS E, CLUB MAD, LLC, FRED APARTMENTS, LLC, THE, HILLSIDE LIMITED PARTNERSHIP, L-R INVESTMENTS, LEWIS MOUNTAIN HOLDING, LLC, MOUNTAIN VIEW MOBILE HOME PARK, MOUNTAIN VIEW MOBILE HOME PARK LLC, OXFORD HILL LLC, PAYNE&#39;S MILL PROPERTY OWNERS ASSOCIATION, INC, ROCK CREEK OWNERS ASSOCIATION INC, RUGBY MCINTYRE APARTMENTS, LLC, SADLER COURT APARTMENTS LLC, STADIUM ROAD LIMITED PARTNERSHIP, WELLINGTON COURT, LLC, WERTLAND STREET LLC, WILLOUGHBY TOWNES OWNERS ASSOC, INC, WOODROW TOO, LLC, WOODROW, LLC] | MSC UVA | 45 | . 8 P O BOX 1467 | [1023 PARK STREET, LLC, 1134 EMMET STREET, LLC, 1215 EAST MARKET STREET LLC, 321-323 EAST MAIN STREET, LLC, 700 PRESTON LLC, 901 SEMINOLE TRAIL, LLC, BELMONT &amp; CARLTON HOLDINGS, LLC, BELMONT AND CARLTON HOLDINGS, LLC, CHOCO-CRUZ, LLC, CLEVELAND AVENUE, LLC, FLUVANNA HOLDINGS, LLC, JEFFERSON THEATER HOLDINGS, LLC, MATTIE, JEFFREY D, PEYTON ASSOCIATES PARTNERSHIP, PEYTON ASSOCIATES PARTNERSHIP, TRIMONT, LLC, WATER MAIN, LLC] | Riverbend Development | 40 | . 9 1001 E MARKET ST STE 102 | [CARLTON MANOR HOUSING, INC, CARLTON NEIGHBORHOOD HOUSING LLC, CH MEWS HOUSING, LP, COMMUNITY SERVICES HOUSING INC, COMMUNITY SERVICES HOUSING, INC, GRADY MANOR HOUSING, INC, MONTICELLO MANOR HOUSING, INC, SHORT 18TH STREET HOUSING, LP, SPRUCE MANOR HOUSING, INC] | Community Services Housing | 34 | . 10 2088 UNION ST STE 1 | [CADGENE, A &amp; G SILVERMAN, TR MAIN ST LD TR, CADGENE, A &amp; G SILVERMAN, TR WOOD&amp;WOOD LD T, MAIN STREET ASSOCIATES LLC, MAIN STREET ASSOCIATES, LLC, MAIN STREET WEST, LLC, TOWNSQUARE ASSOCIATES, UNION STATION PARTNERS, LLC, VIRGINIA PACIFIC INVESTMENTS, LLC, VIRGINIA PACIFIC INVESTMENTS, LLC, ETAL, WILLIAMS, J&amp; DAVID PETTIT, TR 108 4 ST LD, WILLIAMS, J &amp; D PETTIT, TR A&amp;N BLDG LD TR, WILLIAMS, J &amp; D PETTIT, TR ADVANCE AUTO LD, WILLIAMS, J &amp; D PETTIT, TR BISHOP BLD LD TR, WILLIAMS, J &amp; D PETTIT, TR FIFTH ST LD TR, WILLIAMS, J &amp; D PETTIT, TR H&amp;M BLDG LD TR, WILLIAMS, J &amp; D PETTIT, TR WOOD&amp;WOOD LD TR, WILLIAMS, J PAGE ETAL TR-108 4TH ST LD TR, WILLIAMS, J PAGE ETAL-TR 220 CT SQ, WILLIAMS, J PAGE, TRUSTEE &amp; PETTIT, DAVID H, TRUSTEE] | Allan Cadgene | 33 | . 11 P O BOX 5526 | [COURT SQUARE LLC, GIANT SEMINOLE LIMITED PARTNERSHIP, GIANT SEQUEL INVESTORS, LLC, JEFFERSON MEDICAL BUILDING LIMITED, JEFFERSON MEDICAL BUILDING LIMITED PARTNERSHIP, MOSBY REALTY, LLC, ROTGIN, CHARLES ETAL TR-WESTMUR LD TR, SEQUEL INVESTORS LIMITED PARTNERSHIP, THE RESIDENCES AT 218, LLC, WATER STREET INVESTORS, LLC] | Great Eastern Management Company | 25 | . 12 P O BOX 400218 | [UNIVERSITY OF VIRGINIA FOUNDATION, UNIVERSITY OF VIRGINIA FOUNDATION, VABETA CORPORATION, VIRGINIA OMICRON CHAPTER HOUSE ASSOC, WOOGLIN COMPANY] | University of Virginia Foundation | 24 | . 13 400 LOCUST AVE STE 3 | [1111 BUILDING PARTNERS, LLC, 1248 EMMET LLC, 600 CONCORD LLC, 618 FOREST LLC, 9.5 STREET LLC, 910 EAST HIGH LLC, CITY CENTER STORAGE, LLC, EAST JEFFERSON ASSEMBLAGE LLC, MWPC PROPERTIES, LLC &amp; TRR PROPERTIES LC, ONE SIX HUNDRED, LLC, PRESTON AVENUE INVESTMENTS LLC, R &amp; I BUILDINGS CO, LC, RIVANNASIDE LLC, SIDE BUY SIDE LLC, SUNRISE CVILLE LLC, TIN HUT LLC, TRACKSIDE PROPERTIES II, LLC, TRACKSIDE PROPERTIES, LLC] | BMC Holdings Group | 24 | . 14 201 15TH ST NW STE 1A | [14TH ST, LLC, 15TH STREET LC, BRANDON MONROE, LLC, UNIVERSITY CIRCLE LLC, VELIKY, LC] | Veliky Rentals | 24 | . 15 142 S PANTOPS DR | [BALLIF INVESTMENTS, LLC, BELMONT STATION, LLC, FMC INVESTMENTS, LLC, SOUTHERN DEVELOPMENT GROUP, INC, SOUTHERN PROPERTY, LLC] | Southern Development Homes | 23 | . 16 300 2ND ST NE | [300, SECOND STREET PARTNERSHIP, LOCHLYN HILL DEVELOPMENT GROUP, LLC, QUEEN CHARLOTTE SQUARE ASSOCIATES, TRANSATLANTIC, PARTNERSHIP, UVA 36, LLC] | Milestone Partners | 22 | . 17 2000 BENTIVAR DR | [BERKWELL, LLC, BINX INVESTMENT GROUP, LLC, CROSBY, JAMES &amp; CATHERINE, CROSBY, JAMES, CATHERINE &amp; DEVIN P, JNC HOLDINGS, LLC] | Binx Properties | 22 | . 18 P O BOX 7136 | [RALSTON, E RANDALL &amp; JOHN S, SUC TR 114 CLEVELAND AVE LD TR, RALSTON, E RANDALL &amp; JOHN S, TR 463 14TH ST LD TR, RALSTON, E RANDALL &amp; JOHN, TR 504 14TH ST LD TR, RALSTON, E RANDALL &amp; JOHNS S, SUC-TR 323 14TH ST LD TR, SHAH, HASMUKH &amp; JUDY, SHAH, HASMUKH S, SMITH, MARY J, TR 1023 5TH ST LD TR, SMITH, MARY J, TR 1034 PRESTON AVE LD TR, SMITH, MARY J, TR 108 STRATFORD CT LD TR, SMITH, MARY J, TR 109 OBSERVATORY RD LD TR, SMITH, MARY J, TR 112 CLEVELAND LD TR, SMITH, MARY J, TR 1201 GORDON AVE LD TR, SMITH, MARY J, TR 121 HARMON ST LD TR, SMITH, MARY J, TR 1305 GORDON ST LD TR, SMITH, MARY J, TR 1305 JOHN ST LD TR, SMITH, MARY J, TR 406 FAIRWAY AVE LD TR, SMITH, MARY J, TR 816 AVON ST LD TR, SMITH, MARY J, TR ROCKLAND AVE LD TR, SMITH, MARY J, TR SECURITIES LD TR, SMITH, MARY, TR 119 WASHINGTON AVE LD TR] | INV Group | 21 | . 19 2426 SUNSET RD | [PALLINI, IAN, PALLINI, IAN P J R &amp; FELIX RAMOS, PALLINI, LAURIE C, THE GOOD EARTH, LLC] | 2426 SUNSET RD | 21 | . Next, we can map the properties of the largest groups. Here&#39;s an interactive map of the top 10 property owners in the city; hover over a parcel to see its owner, current assessment, etc. Some groups specialize in student apartments, and most of their properties are near UVA. MSC mostly follows this pattern, but it also appears to own the Mountain View Mobile Home Park off Avon St. Neighborhood Investments also owns some student apartments near campus, as well as a number of townhomes on Longwood Dr. Silk Road Properties, owned by Jeremy Caplin, owns dozens of rentals in the 10th and Page neighborhood, which are &quot;offered them as affordable rentals for working families, while trying to slow displacement and gentrification&quot;. And Woodard Properties, the largest property owner by number of parcels, owns properties all over the city, including a growing collection in Fifeville that now includes much of the land between King St and Elm St. . entities = holdings[:10].ownerentity.tolist() palette = palettable.colorbrewer.qualitative.Set3_10 def style(shape): ownerentity = shape[&quot;properties&quot;][&quot;ownerentity&quot;] fill_color = palette.hex_colors[entities.index(ownerentity)] return { &quot;color&quot;: &quot;black&quot;, &quot;weight&quot;: 0.5, &quot;fillColor&quot;: fill_color, &quot;fillOpacity&quot;: 1, } map_ = folium.Map( location=[38.04, -78.49], tiles=&quot;cartodbpositron&quot;, zoom_start=13.55, zoom_delta=0.5, ) folium.GeoJson( parcels[[&quot;ownerentity&quot;, &quot;ownername&quot;, &quot;assessment&quot;, &quot;address&quot;, &quot;lastsold&quot;, &quot;geometry&quot;]], tooltip=folium.GeoJsonTooltip(fields=[&quot;ownerentity&quot;, &quot;ownername&quot;, &quot;assessment&quot;, &quot;address&quot;, &quot;lastsold&quot;], labels=True), style_function=style, ).add_to(map_) # Adapted from https://github.com/mrcagney/examples_folium/blob/develop/notebooks/categorical_legend.ipynb def add_categorical_legend(map_, title, colors, labels): &quot;&quot;&quot; Given a Folium map, add to it a categorical legend with the given title, colors, and corresponding labels. The given colors and labels will be listed in the legend from top to bottom. Return the resulting map. Based on `this example &lt;http://nbviewer.jupyter.org/gist/talbertc-usgs/18f8901fc98f109f2b71156cf3ac81cd&gt;`_. &quot;&quot;&quot; # Error check if len(colors) != len(labels): raise ValueError(&quot;colors and labels must have the same length.&quot;) color_by_label = dict(zip(labels, colors)) # Make legend HTML template = f&quot;&quot;&quot; {{% macro html(this, kwargs) %}} &lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&#39;maplegend&#39; class=&#39;maplegend&#39;&gt; &lt;div class=&#39;legend-title&#39;&gt;{title}&lt;/div&gt; &lt;div class=&#39;legend-scale&#39;&gt; &lt;ul class=&#39;legend-labels&#39;&gt; &quot;&quot;&quot; for label, color in color_by_label.items(): template += f&quot;&lt;li&gt;&lt;span style=&#39;background:{color}&#39;&gt;&lt;/span&gt;{label}&lt;/li&gt;&quot; template += &quot;&quot;&quot; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; &lt;style type=&#39;text/css&#39;&gt; .maplegend { position: absolute; z-index:9999; background-color: rgba(255, 255, 255, 1); border-radius: 5px; border: 2px solid #bbb; padding: 10px; font-size:12px; right: 10px; bottom: 20px; } .maplegend .legend-title { text-align: left; margin-bottom: 5px; font-weight: bold; font-size: 90%; } .maplegend .legend-scale ul { margin: 0; margin-bottom: 5px; padding: 0; float: left; list-style: none; } .maplegend .legend-scale ul li { font-size: 80%; list-style: none; margin-left: 0; line-height: 18px; margin-bottom: 2px; } .maplegend ul.legend-labels li span { display: block; float: left; height: 16px; width: 30px; margin-right: 5px; margin-left: 0; border: 0px solid #ccc; } .maplegend .legend-source { font-size: 80%; color: #777; clear: both; } .maplegend a { color: #777; } &lt;/style&gt; {% endmacro %} &quot;&quot;&quot; macro = branca.element.MacroElement() macro._template = branca.element.Template(template) map_.get_root().add_child(macro) return map_ add_categorical_legend(map_, &quot;Owners&quot;, palette.hex_colors, entities) map_ . . Make this Notebook Trusted to load map: File -&gt; Trust Notebook Finally, we can check which entities have bought the most land in the city in recent years. The top buyer by parcel count is Stanley Martin Homes, which is tied to a stalled development off Monte Vista Ave. Next are Southern Development Homes, Woodard Properties, and Neighborhood Investments, all familiar from our list of top property owners above. There are also a few owner entities that I haven&#39;t looked up, like &quot;620 WOODBROOK DR STE 6&quot; and &quot;200 GARRETT ST STE O&quot;. I&#39;ll leave that as an exercise for the hypothetical reader. . sales = bq.query( &quot;&quot;&quot; with parcels as ( select parcelnumb as parcelnumber, assessment, ownername, case when owneraddre = &#39;MSC BOX 5186&#39; then &#39;P O BOX 5306&#39; when owneraddre = &#39;3056 BERKMAR DRIVE&#39; then &#39;3056 BERKMAR DR&#39; else owneraddre end as owneraddress, st_geogfromgeojson(geometry) as geometry, from `cvilledata.cville_open_data.parcel_area_details` where owneraddre is not null and filetype not in (&#39;E&#39;) ) select owneraddress, array_agg(distinct ownername ignore nulls order by ownername) as ownernames, sum(assessment) as assessment, st_area(st_union_agg(parcels.geometry)) as area, count(*) as count, from parcels join `cvilledata.cville_open_data.real_estate_sales` sales on parcels.parcelnumber = sales.parcelnumb and sales.saledate &gt;= &#39;2017-01-01&#39; and sales.saledate &lt; &#39;2022-01-01&#39; and sales.saleamount &gt; 0 group by owneraddress order by assessment desc &quot;&quot;&quot; ).result().to_dataframe() sales[&quot;ownerentity&quot;] = sales.owneraddress.apply(lambda owneraddress: ADDRESS_TO_ENTITY_NAME.get(owneraddress, owneraddress)) sales[[&quot;owneraddress&quot;, &quot;ownernames&quot;, &quot;ownerentity&quot;, &quot;count&quot;]].sort_values(&quot;count&quot;, ascending=False)[:10] . . owneraddress ownernames ownerentity count . 131 11710 PLAZA AMERICA DR # 1100 | [STANLEY MARTIN HOMES, LLC] | 11710 PLAZA AMERICA DR # 1100 | 36 | . 31 142 S PANTOPS DR | [BELMONT STATION, LLC, FMC INVESTMENTS, LLC, SOUTHERN PROPERTY, LLC] | Southern Development Homes | 28 | . 12 224 14TH ST NW | [DOGWOOD PROPERTIES OF C&#39;VILLE LLC, KOW DEVELOPMENT LLC, PINK WAREHOUSE, LLC, WEST SOUTH STREET LLC, WOODARD UNITED LLC, WP CASC LLC, WP CHERRY LLC, WP FACILITIES LLC, WP MONTEBELLO, LLC, WP PRESTON LLC, WP UNIVERSITY LLC] | Woodard Properties | 26 | . 11 810 CATALPA CT | [NEIGHBORHOOD INVESTMENTS LLC, NEIGHBORHOOD INVESTMENTS, LLC, NEIGHBORHOOD INVESTMENTS--1910, LLC, NEIGHBORHOOD INVESTMENTS--GRC, LLC, NEIGHBORHOOD INVESTMENTS--JS, LLC, NEIGHBORHOOD INVESTMENTS-1910, LLC] | Neighborhood Investments | 23 | . 16 400 LOCUST AVE STE 3 | [600 CONCORD LLC, 618 FOREST LLC, 9.5 STREET LLC, 910 EAST HIGH LLC, EAST JEFFERSON ASSEMBLAGE LLC, SUNRISE CVILLE LLC, TIN HUT LLC] | BMC Holdings Group | 14 | . 196 620 WOODBROOK DR STE 6 | [132 CARLTON RD, LLC, ACCESSO PROPERTIES, LLC, CROSBY, JAMES &amp; CATHERINE, HNS GROUP, LLC, TOWERS 209, LLC] | 620 WOODBROOK DR STE 6 | 12 | . 6 200 GARRETT ST STE O | [632 PARK STREET, LLC, DAIRY CENTRAL PHASE 1, LLC, DAIRY HOLDINGS, LLC, GRI REALTY HOLDINGS, LLC, PRESTON PLACE, LLC] | 200 GARRETT ST STE O | 12 | . 7 10120 W BROAD ST STE J | [QUIRK CHARLOTTESVILLE, LLC, TOW LOT LLC] | 10120 W BROAD ST STE J | 11 | . 10 P O BOX 400218 | [UNIVERSITY OF VIRGINIA FOUNDATION, UNIVERSITY OF VIRGINIA FOUNDATION] | University of Virginia Foundation | 10 | . 19 6535 WOODBOURNE LN | [PIEDMONT REALTY HOLDINGS I, LLC, PIEDMONT REALTY HOLDINGS III, LLC] | 6535 WOODBOURNE LN | 9 | . This is just a quick analysis, but hopefully it&#39;s been interesting. You can send corrections or suggestions to me at @whatthecarp, or do your own analysis and let me know about it. You can find source data from the city Open Data Portal, and if you enjoy SQL, I&#39;ve mirrored the relevant tables to a public dataset on Google BigQuery. .",
            "url": "https://blog.cvilledata.org/land-use/2022/04/12/who-owns-cville.html",
            "relUrl": "/land-use/2022/04/12/who-owns-cville.html",
            "date": " • Apr 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Is this month's key phrase "Medium-Intensity Residential"?",
            "content": "Property transactions in Charlottesville: Hot market for parcels designated as &quot;Middle Intensity&quot; in Future Land Use Plan . A response to March 2022 property transactions in Charlottesville: Hot market for parcels designated as &quot;Middle Intensity&quot; in Future Land Use Plan . I always make time to read Sean Tubbs&#39;s newsletter, and I was interested to see what he has to say about the new &quot;Medium-Intensity Residential&quot; land use designation adopted in last year&#39;s Comprehensive Plan. Sean noticed a number of properties with this designation, or located close to properties with this designation, that sold for high prices, some far above their most recent assessments. He wrote that . This month&#39;s key phrase is &quot;Medium Intensity Residential&quot;. . and noted that . ...properties with the Medium Intensity Residential designation are selling well over the 2022 assessment. . Sean writes that &quot;I intend no analysis&quot;. Fair enough, but let&#39;s do some analysis! The city provides mostly current data on assessments, property transactions, and parcel details at its Open Data Portal, which I have been mirroring to a public dataset using Google BigQuery for ease of use. Let&#39;s dig into the claims in the blog post. As I read it, there are two key arguments that we can evaluate: . Parcels with the Medium-Intensity Residential designation have been selling for over their official assessments | The difference between sale prices and assessments is greater for Medium-Intensity Residential than for other designations | . First, let&#39;s compare median sale prices, assessments, and the ratio between the two across land use designations. I&#39;m looking at all sales in 2022 to begin with. Note that I&#39;m excluding sales with a price of $0 and sales that included multiple parcels. . bq.query( &quot;&quot;&quot; select distinct percentile_cont(sales.saleamount, 0.5) over (partition by flum.desig_oct) as saleamount, percentile_cont(assessments.totalvalue, 0.5) over (partition by flum.desig_oct) as assessment, percentile_cont(sales.saleamount / assessments.totalvalue, 0.5) over (partition by flum.desig_oct) as saleassessmentratio, count(*) over (partition by flum.desig_oct) as count, flum.desig_oct as designation, from `cvilledata.cville_open_data.real_estate_sales` sales join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on sales.parcelnumb = assessments.parcelnumb and assessments.taxyear = 2022 join `cvilledata.cville_plans_together.flum_202110` flum on sales.parcelnumb = flum.parcelnumb where sales.saledate &gt;= &#39;2022-01-01&#39; and sales.saleamount &gt; 0 and sales.bookpage not in ( select bookpage from `cvilledata.cville_open_data.real_estate_sales` where saledate &gt;= &#39;2022-01-01&#39; and saleamount &gt; 0 group by bookpage having count(*) &gt; 1 ) and flum.desig_oct in ( &#39;General Residential&#39;, &#39;Medium-Intensity Residential&#39;, &#39;High-Intensity Residential&#39; ) order by count desc &quot;&quot;&quot; ).result().to_dataframe() . . saleamount assessment saleassessmentratio count designation . 0 423750.0 | 345100.0 | 1.128854 | 100 | General Residential | . 1 355350.0 | 364200.0 | 1.054195 | 24 | Medium-Intensity Residential | . 2 430000.0 | 440800.0 | 0.975198 | 2 | High-Intensity Residential | . As Sean noted, Medium-Intensity Residential parcels are selling for over their assessments, with the median ratio of sale price to assessed value at 1.05, meaning that sales were typically about 5% over assessments. However, General Residential parcels had an even higher ratio of 1.13, with the median parcel selling for about 13% more than its assessed value. But Sean only considered March; let&#39;s use that same filter to make sure we&#39;re looking at the same parcels: . bq.query( &quot;&quot;&quot; select distinct percentile_cont(sales.saleamount, 0.5) over (partition by flum.desig_oct) as saleamount, percentile_cont(assessments.totalvalue, 0.5) over (partition by flum.desig_oct) as assessment, percentile_cont(sales.saleamount / assessments.totalvalue, 0.5) over (partition by flum.desig_oct) as saleassessmentratio, count(*) over (partition by flum.desig_oct) as count, flum.desig_oct as designation, from `cvilledata.cville_open_data.real_estate_sales` sales join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on sales.parcelnumb = assessments.parcelnumb and assessments.taxyear = 2022 join `cvilledata.cville_plans_together.flum_202110` flum on sales.parcelnumb = flum.parcelnumb where sales.saledate &gt;= &#39;2022-03-01&#39; and sales.saledate &lt; &#39;2022-04-01&#39; and sales.saleamount &gt; 0 and sales.bookpage not in ( select bookpage from `cvilledata.cville_open_data.real_estate_sales` where saledate &gt;= &#39;2022-03-01&#39; and saledate &lt; &#39;2022-04-01&#39; and saleamount &gt; 0 group by bookpage having count(*) &gt; 1 ) and flum.desig_oct in ( &#39;General Residential&#39;, &#39;Medium-Intensity Residential&#39;, &#39;High-Intensity Residential&#39; ) order by count desc &quot;&quot;&quot; ).result().to_dataframe() . . saleamount assessment saleassessmentratio count designation . 0 520000.0 | 412400.0 | 1.165224 | 43 | General Residential | . 1 421000.0 | 396300.0 | 1.115945 | 14 | Medium-Intensity Residential | . Looking at March alone, Medium-Intensity Residential parcels had sale prices exceeding their assessments by about 12%, and General Residential parcels had prices exceeding their assessmens by about 18%. . Let&#39;s revisit the claims from above: . Parcels with the Medium-Intensity Residential designation have been selling for over their official assessments . This is consistent with the data! Medium-Intensity Residential parcels sold for about 5% more than assessments overall for 2022 and 12% in March alone. What about the next claim? . The difference between sale prices and assessments is greater for Medium-Intensity Residential than for other designations . This claim isn&#39;t supported here. While Medium-Intensity Residential parcels sold for over their assessment prices, this was also true for General Residential parcels, and it turns out that sale prices exceeeded assessments by an even higher proportion in General Residential. Sean wrote that . This month&#39;s key phrase is &quot;Medium Intensity Residential&quot;. . But maybe the unusual thing about Medium-Intensity Residential is that the recent sale prices of these parcels have been lower, relative to assessments, than the General Residential category that makes up the bulk of the city&#39;s residential land. . I&#39;ve tried to evaluate these claims in a bit more detail, but there are many limitations to this quick analysis. Maybe the Medium-Intensity Residential properties that have been sold this year are in different neighborhoods than the General Residential properties; maybe the city assesses properties differently by land use designation in a biased way. Maybe there was a pre-existing difference in land or property values across designations. Maybe correcting for these potential differences, or others that I haven&#39;t thought of, would support the claim that Medium-Intensity Residential properties are suddenly uniquely expensive. But at least so far, it appears that sale prices are higher than assessments citywide, and if anything this is more true of General Residential than Medium-Intensity Residential in recent months. . It&#39;s also worth pointing out that we don&#39;t have much data yet. The Comprehensive Plan was passed in December 2021, and only 23 parcels zoned Medium-Intensity Residential have sold in 2022 (not including multi-parcel transactions or homes built after 2020). Meanwhile, the zoning rewrite is just starting:we haven&#39;t actually changed the rules yet. It&#39;s interesting to look at the early data we have, but realistically, it&#39;s going to take years to draw conclusions with any confidence. Anyway, thanks to Sean for raising some interesting questions. If you&#39;re still reading, subscribe to his substack if you haven&#39;t already. . One last point: maybe this analysis has been skewed by a small number of unusual sales. Using medians rather than means should reduce the influence of outliers. And I&#39;ve excluded sales that I don&#39;t think we should consider: specifically, properties that sold for $0 and properties that were sold as a package along with other properties. But maybe I missed something! So for completeness, here are the individual parcels that have sold in 2022, first Medium-Intensity Residential, then General Residential: . bq.query( &quot;&quot;&quot; select sales.parcelnumb as parcelnumber, sales.saleamount, sales.saledate, assessments.totalvalue, sales.saleamount / assessments.totalvalue as saleassessmentratio, sales.streetnumb, sales.streetname, sales.unit, from `cvilledata.cville_open_data.real_estate_sales` sales join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on sales.parcelnumb = assessments.parcelnumb and assessments.taxyear = 2022 join `cvilledata.cville_plans_together.flum_202110` flum on sales.parcelnumb = flum.parcelnumb where sales.saledate &gt;= &#39;2022-01-01&#39; and sales.saleamount &gt; 0 and sales.bookpage not in ( select bookpage from `cvilledata.cville_open_data.real_estate_sales` where saledate &gt;= &#39;2022-01-01&#39; and saleamount &gt; 0 group by bookpage having count(*) &gt; 1 ) and flum.desig_oct = &#39;Medium-Intensity Residential&#39; order by sales.saledate desc &quot;&quot;&quot; ).result().to_dataframe() . . parcelnumber saleamount saledate totalvalue saleassessmentratio streetnumb streetname unit . 0 470041000 | 525000 | 2022-04-04 | 386300 | 1.359047 | 607 | WATSON AVE | None | . 1 050013000 | 962500 | 2022-03-31 | 706300 | 1.362735 | 807 | RUGBY RD | None | . 2 070003180 | 835000 | 2022-03-31 | 681700 | 1.224879 | 111 | ALDERMAN RD | None | . 3 550049000 | 385000 | 2022-03-31 | 400900 | 0.960339 | 1338 | CHESAPEAKE ST | None | . 4 43C041000 | 312500 | 2022-03-29 | 325200 | 0.960947 | 2239 | BANBURY ST | None | . 5 21A131200 | 360700 | 2022-03-28 | 312500 | 1.154240 | 103 | LONGWOOD DR | E | . 6 440028230 | 511000 | 2022-03-24 | 328400 | 1.556029 | 1435 | WESTWOOD RD | None | . 7 41A101100 | 900000 | 2022-03-24 | 698700 | 1.288106 | 1616 | MEADOWBROOK HEIGHTS RD | None | . 8 25A175000 | 365000 | 2022-03-21 | 338700 | 1.077650 | 159 | BROOKWOOD DR | None | . 9 110076000 | 550000 | 2022-03-16 | 425900 | 1.291383 | 516 | VALLEY RD | None | . 10 600145100 | 606500 | 2022-03-15 | 579900 | 1.045870 | 1010 | ELLIOTT AVE | None | . 11 220195101 | 350000 | 2022-03-10 | 425300 | 0.822949 | 1526 | CHERRY AVE | None | . 12 540249000 | 260000 | 2022-03-04 | 275700 | 0.943054 | 213 | MEADE AVE | None | . 13 470045110 | 330000 | 2022-03-04 | 391700 | 0.842481 | 905 | MARSHALL ST | None | . 14 110061100 | 457000 | 2022-03-02 | 316500 | 1.443918 | 126 | MAYWOOD LN | None | . 15 200100100 | 345000 | 2022-02-24 | 347500 | 0.992806 | 2601 | JEFFERSON PARK AVE | None | . 16 43C026000 | 314000 | 2022-02-22 | 368400 | 0.852334 | 2238 | BANBURY ST | None | . 17 610017110 | 239000 | 2022-02-17 | 175500 | 1.361823 | 959 | RIVES ST | None | . 18 190034340 | 235000 | 2022-02-17 | 376300 | 0.624502 | 201 | OLD LYNCHBURG RD | None | . 19 270056000 | 233000 | 2022-02-14 | 285500 | 0.816112 | 405 | ELLIOTT AVE | None | . 20 540246000 | 286000 | 2022-02-08 | 293700 | 0.973783 | 305 | MEADE AVE | None | . 21 200031000 | 392000 | 2022-02-02 | 360000 | 1.088889 | 107 | HARRIS RD | None | . 22 440018100 | 300000 | 2022-01-28 | 387600 | 0.773994 | 1439 | RUGBY AVE | None | . 23 290266024 | 345000 | 2022-01-13 | 324700 | 1.062519 | 210 | BURNET ST | None | . bq.query( &quot;&quot;&quot; select sales.parcelnumb as parcelnumber, sales.saleamount, sales.saledate, assessments.totalvalue, sales.saleamount / assessments.totalvalue as saleassessmentratio, sales.streetnumb, sales.streetname, sales.unit, from `cvilledata.cville_open_data.real_estate_sales` sales join `cvilledata.cville_open_data.real_estate_all_assessments` assessments on sales.parcelnumb = assessments.parcelnumb and assessments.taxyear = 2022 join `cvilledata.cville_plans_together.flum_202110` flum on sales.parcelnumb = flum.parcelnumb where sales.saledate &gt;= &#39;2022-01-01&#39; and sales.saleamount &gt; 0 and sales.bookpage not in ( select bookpage from `cvilledata.cville_open_data.real_estate_sales` where saledate &gt;= &#39;2022-01-01&#39; and saleamount &gt; 0 group by bookpage having count(*) &gt; 1 ) and flum.desig_oct = &#39;General Residential&#39; order by sales.saledate desc &quot;&quot;&quot; ).result().to_dataframe() . . parcelnumber saleamount saledate totalvalue saleassessmentratio streetnumb streetname unit . 0 230094200 | 360000 | 2022-04-07 | 372100 | 0.967482 | 512 | PATON ST | None | . 1 41A006000 | 750000 | 2022-04-07 | 553800 | 1.354280 | 1631 | BRANDYWINE DR | None | . 2 230090000 | 60000 | 2022-04-01 | 218200 | 0.274977 | 1306 | KING ST | None | . 3 380045000 | 625000 | 2022-04-01 | 504100 | 1.239833 | 1610 | BRUCE AVE | None | . 4 25A116101 | 550000 | 2022-04-01 | 471000 | 1.167728 | 948 | RAYMOND RD | None | . 5 560114200 | 622431 | 2022-04-01 | 104500 | 5.956278 | 120 | FRANKLIN ST | None | . 6 290164000 | 751100 | 2022-03-31 | 495300 | 1.516455 | 412 | 5TH ST SW | None | . 7 410043000 | 592000 | 2022-03-31 | 462400 | 1.280277 | 1427 | GENTRY LN | None | . 8 050006000 | 1300000 | 2022-03-31 | 1154100 | 1.126419 | 1816 | WINSTON RD | None | . 9 18A077B00 | 525000 | 2022-03-31 | 414600 | 1.266281 | 257 | HUNTLEY AVE | None | . 10 490054000 | 400000 | 2022-03-31 | 375000 | 1.066667 | 1217 | RIVER VISTA AVE | None | . 11 540064100 | 375000 | 2022-03-30 | 360000 | 1.041667 | 420 | 13TH ST NE | None | . 12 48A040039 | 737995 | 2022-03-30 | 160000 | 4.612469 | 1341 | PEN PARK LN | None | . 13 41A076000 | 711501 | 2022-03-30 | 549900 | 1.293873 | 1644 | ST ANNES RD | None | . 14 260072000 | 265500 | 2022-03-28 | 239900 | 1.106711 | 510 | ROUGEMONT AVE | None | . 15 48A040015 | 706807 | 2022-03-25 | 160000 | 4.417544 | 430 | LOCHLYN HILL DR | None | . 16 600088000 | 388000 | 2022-03-24 | 295100 | 1.314809 | 906 | STONEHENGE AVE | None | . 17 200136000 | 485000 | 2022-03-24 | 418200 | 1.159732 | 234 | MONTE VISTA AVE | None | . 18 610065200 | 449000 | 2022-03-23 | 300600 | 1.493679 | 904 | RIVES ST | None | . 19 600120007 | 520000 | 2022-03-23 | 429600 | 1.210428 | 1301 | CASTALIA ST EXT | None | . 20 230048000 | 270000 | 2022-03-22 | 233600 | 1.155822 | 1008 | GROVE ST | None | . 21 18A013000 | 315000 | 2022-03-22 | 342100 | 0.920783 | 227 | STRIBLING AVE | None | . 22 310035000 | 645000 | 2022-03-21 | 563600 | 1.144429 | 723 | WEST ST | None | . 23 470048800 | 750000 | 2022-03-21 | 692200 | 1.083502 | 928 | MARSHALL ST | None | . 24 48A040005 | 202860 | 2022-03-21 | 160000 | 1.267875 | 425 | LOCHLYN HILL DR | None | . 25 48A040008 | 200655 | 2022-03-21 | 160000 | 1.254094 | 407 | LOCHLYN HILL DR | None | . 26 48A040029 | 157658 | 2022-03-21 | 160000 | 0.985363 | 706 | LOCHLYN HILL DR | None | . 27 060048000 | 1055000 | 2022-03-18 | 1059500 | 0.995753 | 1844 | EDGEWOOD LN | None | . 28 18A121000 | 605000 | 2022-03-18 | 487300 | 1.241535 | 220 | HUNTLEY AVE | None | . 29 030026000 | 1150000 | 2022-03-18 | 789900 | 1.455880 | 1617 | WESTWOOD RD | None | . 30 240071000 | 305000 | 2022-03-18 | 301400 | 1.011944 | 713 | ROCK CREEK RD | None | . 31 400034000 | 1225000 | 2022-03-17 | 1051300 | 1.165224 | 2035 | HESSIAN RD | None | . 32 48A040038 | 806222 | 2022-03-17 | 160000 | 5.038888 | 1347 | PEN PARK LN | None | . 33 550066180 | 550000 | 2022-03-11 | 476700 | 1.153765 | 102 | CHISHOLM PL | None | . 34 520016400 | 599000 | 2022-03-10 | 590700 | 1.014051 | 736 | LYONS AVE | None | . 35 240068000 | 425000 | 2022-03-10 | 356600 | 1.191812 | 707 | ROCK CREEK RD | None | . 36 200019100 | 65000 | 2022-03-09 | 150000 | 0.433333 | 0 | PORTER AVE | None | . 37 260043110 | 480000 | 2022-03-08 | 444300 | 1.080351 | 120 | ROY&#39;S PL | None | . 38 070003600 | 1295000 | 2022-03-08 | 931000 | 1.390977 | 2109 | MORRIS RD | None | . 39 610079150 | 236500 | 2022-03-08 | 243000 | 0.973251 | 812 | NASSAU ST | None | . 40 48A040034 | 739993 | 2022-03-07 | 160000 | 4.624956 | 736 | LOCHLYN HILL DR | None | . 41 510162000 | 337000 | 2022-03-04 | 321700 | 1.047560 | 1301 | POPLAR ST | None | . 42 42A087000 | 970000 | 2022-03-04 | 808200 | 1.200198 | 1625 | YORKTOWN DR | None | . 43 47A095000 | 330000 | 2022-03-02 | 293400 | 1.124744 | 1224 | AGNESE ST | None | . 44 21A023000 | 455000 | 2022-03-01 | 412400 | 1.103298 | 403 | ALLEN DR | None | . 45 190037290 | 380000 | 2022-03-01 | 347700 | 1.092896 | 417 | MOBILE LN | None | . 46 210080000 | 497000 | 2022-03-01 | 424300 | 1.171341 | 108 | RAYMOND AVE | None | . 47 480050000 | 520000 | 2022-03-01 | 428900 | 1.212404 | 1025 | ST CHARLES AVE | None | . 48 060068000 | 1375000 | 2022-03-01 | 919400 | 1.495541 | 1831 | UNIVERSITY CIR | None | . 49 43B008000 | 522600 | 2022-02-28 | 430400 | 1.214219 | 1403 | LEHIGH CIR | None | . 50 55A088618 | 468000 | 2022-02-28 | 390100 | 1.199692 | 109 | RIVERBLUFF CIR | None | . 51 22A013000 | 435000 | 2022-02-25 | 522400 | 0.832695 | 1504 | TRAILRIDGE RD | None | . 52 190075000 | 450000 | 2022-02-25 | 476400 | 0.944584 | 311 | MONTE VISTA AVE | None | . 53 590134000 | 460000 | 2022-02-24 | 261100 | 1.761777 | 705 | ROCKLAND AVE | None | . 54 470020100 | 480000 | 2022-02-22 | 486500 | 0.986639 | 505 | PARK HILL | None | . 55 570139000 | 345000 | 2022-02-18 | 221200 | 1.559675 | 304 | SPRUCE ST | None | . 56 48A004000 | 315000 | 2022-02-18 | 283400 | 1.111503 | 1209 | HOLMES AVE | None | . 57 55A124000 | 306000 | 2022-02-18 | 284500 | 1.075571 | 1703 | E MARKET ST | None | . 58 48A040051 | 134505 | 2022-02-17 | 136000 | 0.989007 | 456 | NICHOLSON ST | None | . 59 48A040052 | 134505 | 2022-02-17 | 136000 | 0.989007 | 452 | NICHOLSON ST | None | . 60 230143000 | 420000 | 2022-02-16 | 350700 | 1.197605 | 108 | NORTH BAKER ST | None | . 61 230068000 | 340000 | 2022-02-15 | 273400 | 1.243599 | 402 | JONES ST | None | . 62 300093000 | 400000 | 2022-02-15 | 290700 | 1.375989 | 856 | NALLE ST | None | . 63 410050000 | 260000 | 2022-02-15 | 340300 | 0.764032 | 1439 | GENTRY LN | None | . 64 240147000 | 185801 | 2022-02-15 | 187600 | 0.990410 | 739 | PROSPECT AVE | None | . 65 240148000 | 162000 | 2022-02-15 | 170900 | 0.947923 | 741 | PROSPECT AVE | None | . 66 220046110 | 365000 | 2022-02-14 | 344300 | 1.060122 | 113 | THOMAS DR | None | . 67 48A014000 | 345000 | 2022-02-10 | 294200 | 1.172672 | 1109 | HOLMES AVE | None | . 68 190035260 | 340000 | 2022-02-09 | 332800 | 1.021635 | 2749 | MCELROY DR | None | . 69 490099000 | 570000 | 2022-02-09 | 525700 | 1.084269 | 1304 | BELLEVIEW AVE | None | . 70 260110100 | 189000 | 2022-02-08 | 156600 | 1.206897 | 1505 | ROSA TER | None | . 71 40C018000 | 161000 | 2022-02-08 | 318400 | 0.505653 | 1915 | SWANSON DR | None | . 72 55A08811A | 260000 | 2022-02-08 | 215300 | 1.207617 | 338 | RIVERSIDE AVE | None | . 73 590379012 | 505000 | 2022-02-04 | 131900 | 3.828658 | 1624 | RIALTO ST | None | . 74 030111000 | 200000 | 2022-02-04 | 243300 | 0.822030 | 704 | 12TH ST NW | None | . 75 41A059000 | 485000 | 2022-02-04 | 514400 | 0.942846 | 1627 | ST ANNES RD | None | . 76 43C032000 | 450000 | 2022-02-03 | 453100 | 0.993158 | 2226 | BANBURY ST | None | . 77 48A040012 | 799749 | 2022-02-03 | 160000 | 4.998431 | 412 | LOCHLYN HILL DR | None | . 78 220046120 | 350000 | 2022-02-02 | 345900 | 1.011853 | 111 | THOMAS DR | None | . 79 590379011 | 535585 | 2022-02-01 | 131900 | 4.060538 | 1622 | RIALTO ST | None | . 80 500142000 | 120000 | 2022-01-31 | 110000 | 1.090909 | 516 | CAROLINE AVE | None | . 81 40C034000 | 422500 | 2022-01-28 | 465200 | 0.908212 | 2305 | SHELBY DR | None | . 82 030060800 | 633000 | 2022-01-28 | 579800 | 1.091756 | 113 | ROBINSON WOODS | None | . 83 48A040014 | 685436 | 2022-01-27 | 657600 | 1.042330 | 424 | LOCHLYN HILL DR | None | . 84 300167000 | 522000 | 2022-01-24 | 340800 | 1.531690 | 609 | 7 1/2 ST SW | None | . 85 590311000 | 250000 | 2022-01-20 | 215000 | 1.162791 | 802 | DRUID AVE | None | . 86 48A012000 | 349000 | 2022-01-19 | 292700 | 1.192347 | 708 | ELIZABETH AVE | None | . 87 47A124000 | 367500 | 2022-01-18 | 357500 | 1.027972 | 1242 | HOLMES AVE | None | . 88 490142000 | 404000 | 2022-01-14 | 350700 | 1.151982 | 1105 | LOCUST AVE | None | . 89 190034140 | 345000 | 2022-01-14 | 336100 | 1.026480 | 2722 | MCELROY DR | None | . 90 300117100 | 305000 | 2022-01-12 | 242100 | 1.259810 | 813 | KING ST | None | . 91 220046201 | 380000 | 2022-01-12 | 335900 | 1.131289 | 117 | DAVID TER | None | . 92 390001000 | 585000 | 2022-01-11 | 578200 | 1.011761 | 2006 | MEADOWBROOK RD | None | . 93 210105230 | 370000 | 2022-01-10 | 424000 | 0.872642 | 2310 | CRESTMONT AVE | None | . 94 310261000 | 250000 | 2022-01-07 | 297800 | 0.839490 | 708 | WEST ST | None | . 95 230027000 | 200000 | 2022-01-07 | 254000 | 0.787402 | 1206 | GROVE ST | None | . 96 43A024000 | 805916 | 2022-01-06 | 810100 | 0.994835 | 1320 | KENWOOD LN | None | . 97 18A060000 | 580000 | 2022-01-05 | 529400 | 1.095580 | 219 | HUNTLEY AVE | None | . 98 210105160 | 368000 | 2022-01-05 | 399100 | 0.922075 | 2324 | CRESTMONT AVE | None | . 99 22B303000 | 205000 | 2022-01-04 | 165900 | 1.235684 | 952 | ROCK CREEK RD | None | .",
            "url": "https://blog.cvilledata.org/land-use/2022/04/10/property-transactions.html",
            "relUrl": "/land-use/2022/04/10/property-transactions.html",
            "date": " • Apr 10, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://blog.cvilledata.org/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://blog.cvilledata.org/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}